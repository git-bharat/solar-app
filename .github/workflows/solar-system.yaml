name: Solar System CI/CD Workflow

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggers the workflow on push events to specific branches
  push:
    branches:
      - main
      - feature/dev # Assuming your development feature branch is named this way

env:
  # Define global environment variables for the workflow
  IMAGE_NAME: solar-system-app # Name of your Docker image
  DOCKER_REGISTRY: docker.io # Or your specific registry, e.g., ghcr.io, your.ecr.aws
  # Use GITHUB_SHA for a unique tag based on the commit hash, or a semantic version
  IMAGE_TAG: ${{ github.sha }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        os: [ubuntu-latest,ubuntu-24.04]
        node_version: [18,19]
    runs-on: $${{matrix.os}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Action to checkout your code

      - name: Setup Node.js Version
        uses: actions/setup-node@v4 # Action to set up Node.js environment
        with:
          node-version: ${{matrix.node_version}} # Use Node.js 20, as defined in your Dockerfile

      - name: Install Dependencies
        run: npm install # Install project dependencies

      - name: Run Unit Tests with Coverage
        continue-on-error: true
        # Pass MONGO_URI from GitHub secrets if your tests (e.g., integration tests)
        # require a live database connection.
        # The 'npm run coverage' script will run tests and generate coverage reports.
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
         mkdir test-report  
         npm run test
        

      - name: Testing report
        uses: actions/upload-artifact@v4 # Action to upload artifacts
        if: always()
        with:
          name: testing-report
          path: test-report # Path to the HTML coverage report generated by nyc
          retention-days: 5 # How long to retain the artifact 
